name: PlatformIO CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write  # Allows writing to repository contents, including creating releases

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        board: [ wemos_d1_mini32 ]  # List other boards here if you want to build for multiple

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      # Cache pip dependencies to speed up Python setup
      - name: Cache PlatformIO and pip dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.platformio
            ~/.cache/pip
          key: ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-platformio-

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio

      # Cache the PlatformIO build directory to avoid recompilation of unchanged files
      - name: Cache PlatformIO Build Artifacts
        uses: actions/cache@v2
        with:
          path: .pio
          key: ${{ runner.os }}-pio-${{ matrix.board }}-${{ hashFiles('**/*.cpp', '**/*.h') }}
          restore-keys: |
            ${{ runner.os }}-pio-${{ matrix.board }}-

      - name: Build project
        run: |
          platformio run --environment ${{ matrix.board }}

      # Compress the build output folder into raw-gps.zip
      - name: Archive Build Artifacts
        run: |
          zip -r raw-gps.zip .pio/build/wemos_d1_mini32

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: "Release v1.0.${{ github.run_number }}"
          draft: false
          prerelease: false

      - name: Set Upload URL to Environment File
        if: ${{ steps.create_release.outputs.upload_url != '' }}
        run: echo "UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload Build Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: "raw-gps.zip"
          asset_name: "raw-gps.zip"
          asset_content_type: application/zip
