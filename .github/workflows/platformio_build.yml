name: PlatformIO CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

permissions:
  contents: write  # Allows writing to repository contents, including creating releases

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        board: [wemos_d1_mini32]  # Add other boards here if needed for multi-environment builds

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio

      - name: Build project
        run: platformio run --environment ${{ matrix.board }}



      - name: Determine Tag, Release Name, and Draft Status
        id: release_info
        run: |
          echo "TAG_NAME=${{ github.ref_name }}-v1.0.${{ github.run_number }}-g${{ github.sha }}" >> $GITHUB_ENV
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "RELEASE_NAME=Release ${{ env.TAG_NAME }}" >> $GITHUB_ENV
            echo "DRAFT=false" >> $GITHUB_ENV
          else
            echo "RELEASE_NAME=Feature ${{ env.TAG_NAME }}" >> $GITHUB_ENV
            echo "DRAFT=true" >> $GITHUB_ENV
          fi

      - name: Archive Build Artifacts
        if: success()
        run: |
          zip -r raw-gps-build-${{ env.TAG_NAME }}.zip .pio/build/${{ matrix.board }}
          
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          draft: ${{ env.DRAFT }}
          prerelease: ${{ env.DRAFT }}

      - name: Set Upload URL to Environment File
        if: ${{ steps.create_release.outputs.upload_url != '' }}
        run: echo "UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload Build Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: "raw-gps-build-${{ env.TAG_NAME }}.zip"
          asset_name: "raw-gps-build-${{ env.TAG_NAME }}.zip"
          asset_content_type: application/zip
